generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(uuid())
  username          String   @unique
  currentChallenge  String?  // Optional field
  Authenticator     Authenticator[]

  @@map(name: "users")
}

model Authenticator {
  id                    String                 @id @default(uuid())
  credentialID          Bytes                  // Encoded to base64url then stored as `TEXT`
  credentialPublicKey   Bytes                  // Stored raw bytes as `BYTEA`/`BLOB`/etc...
  counter               BigInt                 // Consider `BIGINT` since some authenticators return atomic timestamps as counters
  transports            Json                   // Optional field, `VARCHAR(255)` and store string array as a CSV string
  UserId                String
  User                  User                   @relation(fields: [UserId], references: [id])
  
  @@map(name: "authenticators")
}

enum CredentialDeviceType {
  singleDevice
  multiDevice
}

enum AuthenticatorTransport {
  usb
  ble
  nfc
  internal
}